security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        cas:
            id: App\Service\ElwUserProvider
    encoders:
        # use your user class name here
        App\Entity\User:
            # Use native password encoder
            # This value auto-selects the best possible hashing algorithm
            # (i.e. Sodium when available).
            algorithm: auto
    firewalls:
        main:
            logout:
                path: app_logout
                # where to redirect after logout
                target: index
                success_handler: PRayno\CasAuthBundle\Event\LogoutSuccessHandler
            anonymous: ~
            lti1p3_message_tool: true
            guard:
                entry_point: prayno.cas_authenticator
                authenticators:
                    - prayno.cas_authenticator
                    - App\Security\LtiAuthenticator
            switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # User permissions handled in the controller
    access_control:
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
#        - { path: ^/lti_test, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
#        - { path: ^/lti1p3, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/home, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/course, roles: ROLE_USER, requires_channel: https }
        - { path: ^/classlist, roles: ROLE_USER, requires_channel: https }
        - { path: ^/doc, roles: ROLE_USER, requires_channel: https }
        - { path: ^/admin, roles: ROLE_ADMIN, requires_channel: https }
        - { path: ^/labelset, roles: ROLE_INSTRUCTOR, requires_channel: https }
        - { path: ^/label, roles: ROLE_INSTRUCTOR, requires_channel: https }
        - { path: ^/markupset, roles: ROLE_INSTRUCTOR, requires_channel: https }
        - { path: ^/markup, roles: ROLE_INSTRUCTOR, requires_channel: https }

