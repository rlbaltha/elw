{% extends 'base.html.twig' %}

{% block title %}Document Edit - {{ parent() }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link type="text/css" rel="stylesheet" href="{{ asset('css/ckeditor_document_v2.css')}}">
    <style>
    .ck-editor__editable_inline {
        min-height: 75vh;
        max-height: 75vh;
    }
    </style>
{% endblock %}

{% block subnav %}
    <h1 class="navbar-brand mb-0 h1 mr-5">Document Edit</h1>
    <li class="nav-item">
        <a id="doc-title-toggle" class="nav-link" href="#" aria-expanded="true">Settings
            <i id='settings_arrows' class="fa fa-chevron-up"></i></a>
    </li>
    <li class="nav-item">
        <a href="#" id="submit-doc-form" class="btn btn-primary">Save</a>
    </li>
{% endblock %}

{% block subnavright %}
    <li class="nav-item">
        <a id='saving_alert' href="javascript:void(0);" class="nav-link" id="doc_save">Saving</a>
    </li>
    <li class="nav-item">
        {% if doc.reviews|length == 0 and  doc.comments|length == 0 and doc.agsResultId is null %}
            <a id="delete-trigger" class="nav-link" href="#">Delete</a>
            {{ include('doc/_delete_form.html.twig') }}
        {% else %}
            <p class="navbar-text">Files that have reviews, end comments, or grades cannot be deleted.</p>
        {% endif %}
    </li>
    <li class="nav-item">
        <a data-bs-toggle="modal" data-bs-target="#helpModal" href="javascript:void(0);" class="nav-link">Document Help</a>
    </li>
{% endblock %}


{% block body %}
    <div class="row">

        <div class="col-lg-8 col-md-12 col-sm-12 mb-3">
        <div id="save_error" class="alert alert-danger d-none">The autosave failed. Please copy your current work before closing and return to eLC to login again.</div>
        {{ include('doc/_form.html.twig', {'button_label': 'Update'}) }}
        </div>

        <div class="col">
        {# Word Count #}
        <div class="card mb-3">
        <div class="card-header">Document Statistics</div>
        <div class="card-body">
            <div><span>Word Count: </span><span id="word-count"></span></div>
            <div><span> Document status: </span><span  id="editor-status">Unchanged</span></div>
        </div>

        </div>

            {# Note Insert #}
            <div class="accordion" id="accordionInsert">
                    <div class="card">
                        <div class="card-header" id="i_heading">
                            <h2 class="mb-0">
                                <button class="btn btn-link" type="button" data-bs-toggle="collapse"
                                        data-bs-target="#i_collapse" aria-expanded="true"
                                        aria-controls="i_collapsei">
                                    Insert Note
                                </button>
                            </h2>
                        </div>

                        <div id="i_collapse" class="collapse show"
                             aria-labelledby="i_heading" data-parent="#accordionInsert">
                            <div class="card-body">
                    <form id='note_insert_form' name='note_insert_form'>
                        <label class="visually-hidden" for="insert_value">Insert Note</label>
                        <textarea class='form-control' id="insert_value" name="html_insert"></textarea>
                        <a id='note_insert_submit' href="javascript:void(0)" class="btn btn-primary btn-sm"
                           title="Insert Note">Insert</a>
                    </form>
                            </div>
                        </div>
                    </div>
            </div>

            {# Markup Insert #}
            <div class="accordion mt-3" id="accordionMarkup">
                {% for markupset in markupsets %}
                    <div class="card">
                        <div class="card-header" id="m_heading{{ loop.index }}">
                            <h2 class="mb-0">
                                <button class="btn btn-link" type="button" data-bs-toggle="collapse"
                                        data-bs-target="#m_collapse{{ loop.index }}" aria-expanded="true"
                                        aria-controls="m_collapse{{ loop.index }}">
                                    Markup {{ loop.index }}: {{ markupset.name }}
                                </button>
                            </h2>
                        </div>

                        <div id="m_collapse{{ loop.index }}" class="collapse"
                             aria-labelledby="m_heading{{ loop.index }}" data-parent="#accordionMarkup">
                            <div class="card-body">
                                {# markup tags as list for accessibility#}
                                <ul style="list-style-type:none; padding-left: 0;">
                                {% for markup in markupset.markups %}
                                    <li style="display:inline">
                                    <a class="badge bg-default" style="background-color:{{ markup.color }}"
                                       href="javascript:insert_markup('{{ markup.id }}', '{{ markup.name }}','{{ markup.color }}');"
                                       title="Submit entry">{{ markup.name }}</a>
                                    </li>
                                {% endfor %}
                                </ul>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
            
            {# rubrics #}
            {% if doc.project.rubrics %}
                <div class="accordion mt-3" id="accordionRubric_doc{{ doc.id }}">
                        {% for rubric in doc.project.rubrics %}
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="r_heading{{ loop.index }}_doc{{ doc.id }}">
                                <button id="rubricheader{{ loop.index }}_doc{{ doc.id }}" class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#r_collapse{{ loop.index }}_doc{{ doc.id }}" aria-expanded="false" aria-controls="r_collapse{{ loop.index }}_doc{{ doc.id }}">
                                    Rubric {{ loop.index }}: {{ rubric.name }}
                                </button>
                            </h2>
                            <div id="r_collapse{{ loop.index }}_doc{{ doc.id }}" class="accordion-collapse collapse" aria-labelledby="r_heading{{ loop.index }}_doc{{ doc.id }}" data-bs-parent="#accordionRubric_doc{{ doc.id }}">
                                <div class="accordion-body">
                                    {{ rubric.body|raw }}
                                </div>
                            </div>
                        </div>
                        {% endfor %}
                    </div>
            {% endif %}
        </div>

    <!-- Modal -->
    <div class="modal fade" id="helpModal" tabindex="-1" role="dialog" aria-labelledby="helpModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Document Help</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close Help"></button>
                </div>
                <div class="modal-body">

                    <p class="card-text">You can click on the ^ next to <strong>Settings</strong> to toggle the settings and give more screen space for the text editor. </p>
                    <p class="card-text"><strong>Insert Note</strong> allows you to embed an inline comment in a
                        document. Place the cursor or highlight a section of text, then type your note and insert.</p>
                    <p class="card-text"><strong>Markup tags </strong>are collected in expandable markup menus. To tag a
                        word or passage, select the text, then click the tag name.</p>

                    <p class="alert alert-warning">We strongly recommend that you compose your work in a word processor and save locally to avoid losing work.
                    Then you can copy-paste your document into the eLW editor.</p>
                    <p class="alert alert-info">For additional <strong>eLW help</strong>, contact esupport@uga.edu or visit the FYW Digital Learning Labs in
                        Park Hall 118.</p>
                </div>

            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('js/ckeditor.js') }}"></script>
    <script src="{{ asset('js/doc_editor_init.js') }}"></script>
    <script>
        {# Markup insert and tracking #}
        function getValues(range) {
            var selection_text = "";
                 for (const item of range.getItems()) {
                        selection_text = selection_text + item.data
                 }
                 return selection_text;
        }
        function insert_markup(id, name, color) {
            editor.focus();
            editor.model.change( writer => {
                 const markup_color = 'markup_' + color;
                 const name = 'add real name here';
                 const range = editor.model.document.selection.getFirstRange();
                 const selection_text = getValues(range);
                 const content = '<span data-id="' + id + '" title="' + name + '" class="markup '+ markup_color +'">'+ selection_text + '</span>';
                 const viewFragment = editor.data.processor.toView( content );
                 const modelFragment = editor.data.toModel( viewFragment );
                 editor.model.insertContent( modelFragment, range )
            } );
        }

        {# Note insert #}
        $( "#insert_value" ).on( "focus", function() {
          editor.execute( 'highlight', { value: 'yellowMarker' } );
        } );
        function note() {
            editor.model.change( writer => {
                 const note_value = document.getElementById("insert_value").value;
                 const note_id = new Date().getTime();
                 const content = '<span data-id="' + note_id + '" class="note">'+ note_value + '</span>';
                 const viewFragment = editor.data.processor.toView( content );
                 const modelFragment = editor.data.toModel( viewFragment );
                 const last_position = editor.model.document.selection.getLastPosition();
                 editor.model.insertContent( modelFragment, last_position);
            } );
            $('#insert_value').val('');
        }

        $(document).ready(function () {
            $("#doc-form").addClass("form-inline");
            $("label[for=doc_title]").toggle();
            $("label[for=insert_value]").toggle();
            {% if doc.origin is not null %}
                $("fieldset").toggle();
                $("#doc_project").toggle();
                $("#doc_stage").toggle();
                $("#doc_access").toggle();
                $("#doc_wordcount").toggle();
                $('#settings_arrows').toggleClass('fa-chevron-down').toggleClass('fa-chevron-up');
                $(this).attr('aria-expanded', function (i, attr) {
                return attr == 'true' ? 'false' : 'true'
                });
            {% endif %}
            $("#doc-title-toggle").click(function () {
                $("fieldset").toggle();
                $("#doc_project").toggle();
                $("#doc_stage").toggle();
                $("#doc_access").toggle();
                $("#doc_wordcount").toggle();
                $('#settings_arrows').toggleClass('fa-chevron-down').toggleClass('fa-chevron-up');
                $(this).attr('aria-expanded', function (i, attr) {
                return attr == 'true' ? 'false' : 'true'
                });
            });
            $("#submit-doc-form").click(function () {
                var count = $('#word-count').text();
                $('#doc_wordcount').val(count);
                $("#doc-form").submit(); // Submit the form
            });
            $(function () {
                $('#note_insert_submit').click(function () {
                    note();
                });
            });

            {# Delete doc trigger #}
            $('#delete-trigger').click(function () {
                $("#delete-form").submit();
            });

            {# Doc autosave #}
            $('#saving_alert').hide();
            var autoSave = setInterval(function () {
                var buffer = $('#editor-status').text();
                var count = $('#word-count').text();
                if (buffer == 'changed') {
                    $('#doc_wordcount').val(count);
                    var body = editor.getData();
                    $.post("{{ course_path('doc_autosave', { 'id': doc.id }) }}", {
                        docBody: body,
                        count: count
                    }, function (data) {
                    })
                    .fail(function() {
                    $('#save_error').removeClass("d-none");
                    });
                    ;
                    $('#editor-status').text('changes saved');
                    $('#saving_alert').fadeIn();
                    $('#saving_alert').delay(3000).fadeOut();

                }
            }, 15000);

            $(".accordion-header").parent('.accordion-item').hover(
                function() {
                    $(this).children('.collapse').collapse('show');
                }, function() {
                    $(this).children('.collapse').collapse('hide');
                }
            );

        });
    </script>

{% endblock %}