{% extends 'base.html.twig' %}

{% block title %}Document Edit - {{ parent() }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
{% endblock %}

{% block subnav %}
    <li class="nav-item">
        <a id="doc-title-toggle" class="nav-link" href="#">Edit Settings <i id="settings_arrows" class="material-icons"
                                                                            style="font-size: medium;">expand_less</i></a>
    </li>
    <li class="nav-item">
        <a href="#" id="submit-doc-form" class="btn btn-primary">Save</a>
    </li>
{% endblock %}

{% block subnavright %}
    <li class="nav-item">
        <a id='saving_alert' href="javascript:void(0);" class="nav-link" id="doc_save">Saving</a>
    </li>
    <li class="nav-item">
        {% if doc.reviews|length == 0 and  doc.comments|length == 0 %}
            <a id="delete-trigger" class="nav-link" href="#">Delete</a>
            {{ include('doc/_delete_form.html.twig') }}
        {% else %}
            <p class="navbar-text">Files that have reviews or feedback cannot be deleted.</p>
        {% endif %}
    </li>
{% endblock %}


{% block body %}
    <div class="row">
        <div class="col-lg-9 col-md-11">{{ include('doc/_form.html.twig', {'button_label': 'Update'}) }}</div>


        <div class="col">
            {# Help Card #}
            <div class="card bg-light mt-3 mb-3" style="margin-top: 0 !important;">
                <div class="card-header">
                    <a id='help-toggle' class="" href="#"><h2>Document Help <i id="help_arrows" class="material-icons expand_arrows">expand_more</i></h2></a>
                </div>
                <div id="help_card" class="card-body">
                    <p class="card-text"><strong>Insert Note</strong> allows you to embed an inline comment in a document.  Place the cursor or highlight a section of text, then type your note and insert.</p>
                    <p class="card-text"><strong>Markup tags </strong>are collected in expandable markup menus.  To tag a word or passage, select the text, then click the tag name.</p>
                </div>
            </div>
            {# Note Insert#}
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Insert Note</h4>
                    <form id='note_insert_form' name='note_insert_form'>
                        <label for="insert_value">Insert Note</label>
                        <textarea class='form-control' id="insert_value" name="html_insert"></textarea>
                        <a id='note_insert_submit' href="javascript:void(0)" class="btn btn-primary"
                           title="Insert Note">Insert</a>
                    </form>
                </div>
            </div>

            {# Markup Insert#}
            <div class="accordion" id="accordionMarkup">
                {% for markupset in markupsets %}
                    <div class="card">
                        <div class="card-header" id="heading{{ loop.index }}">
                            <h2 class="mb-0">
                                <button class="btn btn-link" type="button" data-toggle="collapse"
                                        data-target="#collapse{{ loop.index }}" aria-expanded="true"
                                        aria-controls="collapse{{ loop.index }}">
                                    {{ markupset.name }}
                                </button>
                            </h2>
                        </div>

                        <div id="collapse{{ loop.index }}" class="collapse {% if loop.index==1 %}show{% endif %}"
                             aria-labelledby="heading{{ loop.index }}" data-parent="#accordionMarkup">
                            <div class="card-body">
                                {% for markup in markupset.markups %}
                                    <a class="badge badge-primary" style="background-color:{{ markup.color }}"
                                       href="javascript:insert_markup('{{ markup.id }}', '{{ markup.name }}','{{ markup.color }}');"
                                       title="Submit entry">{{ markup.name }}</a>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        {# toggle help on this page #}
        $( "#help_card" ).toggle();
        $("#help-toggle").click(function () {
            $( "#help_card" ).toggle();
            var text = $('#help_arrows').text();
            $('#help_arrows').text(text == "expand_less" ? "expand_more" : "expand_less");
        });
        {# Markup insert and tracking #}
        function insert_markup(id, name, color) {
            var nEditor = CKEDITOR.instances.doc_body;
            nEditor.focus();
            var markup_html = CKEDITOR.dom.element.createFromHtml('<span data-id="' + id + '" title="' + name + '" class="markup" style="background-color:' + color + '">' + nEditor.getSelection().getNative() + ' </span>');
            nEditor.insertElement(markup_html);
        }
        {# Note insert #}
        function note() {
            var note_id = new Date().getTime();
            var nEditor = CKEDITOR.instances.doc_body;
            nEditor.focus();
            if (nEditor.mode == 'wysiwyg') {
                var hightlight = CKEDITOR.dom.element.createFromHtml('<span id="span' + note_id + '" class="highlight">' + nEditor.getSelection().getNative() + ' </span>');
                nEditor.insertElement(hightlight);
                var note = CKEDITOR.dom.element.createFromHtml('<span id="note' + note_id + '" class="note"> ' + document.getElementById('insert_value').value + ' </span>');
                nEditor.insertElement(note);
                $('#insert_value').val('');
            } else
                alert('You must be on WYSIWYG mode!');
        }

        $(document).ready(function () {
            $("label[for=doc_title]").toggle();
            $("label[for=insert_value]").toggle();
            CKEDITOR.addCss(".cke_editable{cursor:text; font-size: 14px; font-family: Arial, sans-serif;padding: 1in;}");
            {% if doc.origin is not null %}
                $("fieldset").toggle();
                $("#doc_project").toggle();
                $("#doc_stage").toggle();
                $("#doc_access").toggle();
                $("#doc_wordcount").toggle();
                var text = $('#settings_arrows').text();
                $('#settings_arrows').text(text == "expand_less" ? "expand_more" : "expand_less");
            {% endif %}
            $("#doc-title-toggle").click(function () {
                $("fieldset").toggle();
                $("#doc_project").toggle();
                $("#doc_stage").toggle();
                $("#doc_access").toggle();
                $("#doc_wordcount").toggle();
                var text = $('#settings_arrows').text();
                $('#settings_arrows').text(text == "expand_less" ? "expand_more" : "expand_less");
            });
            $("#submit-doc-form").click(function () {
                var editor = CKEDITOR.instances.doc_body;
                var count = editor.wordCount.wordCount;
                $('#doc_wordcount').val(count);
                $("#doc-form").submit(); // Submit the form
            });
            $(function () {
                $('#note_insert_submit').click(function () {
                    note();
                });
            });

            {# Delete doc trigger#}
            $('#delete-trigger').click(function () {
                $("#delete-form").submit();
            });

            {# Doc autosave#}
            $('#saving_alert').hide();
            var editor = CKEDITOR.instances.doc_body;
            var autoSave = setInterval(function () {
                var buffer = editor.checkDirty();
                var count = editor.wordCount.wordCount;
                if (buffer == 1) {
                    $('#doc_wordcount').val(count);
                    editor.resetDirty();
                    var body = editor.getData();
                    $.post("{{ course_path('doc_autosave', { 'id': doc.id }) }}", {docBody: body, count: count}, function (data) {
                    });
                    $('#saving_alert').fadeIn();
                    $('#saving_alert').delay(3000).fadeOut();

                }
            }, 15000);
        });
    </script>
{% endblock %}