{% extends 'base.html.twig' %}

{% block title %}Markup Edit - {{ parent() }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link type="text/css" rel="stylesheet" href="{{ asset('css/colorPick.css') }}">
{% endblock %}

{% block body %}
    <div class="card">
        <div class="card-body">
            <h1 class="card-title">Edit Markup</h1>
            {{ include('markup/_form.html.twig', {'button_label': 'Update'}) }}

            {{ include('markup/_delete_form.html.twig') }}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('js/ckeditor.js') }}"></script>
    <script src="{{ asset('js/colorPick.js') }}"></script>
{#    These colors must be replicated in the ckeditor_document_vx.css#}
    <script>
        $(document).ready(function () {
            var color = $("#markup_color").val();
            $("#markup_color").colorPick({
                'initialColor': color,
                'palette': ['darkblue', 'rebeccapurple', 'darkred', 'darkgreen', 'midnightblue', 'darkolivegreen', 'black', 'teal', 'darkmagenta', 'saddlebrown', 'blue', 'crimson'],
                'onColorSelected': function () {
                    this.element.css({'backgroundColor': this.color, 'color': 'white'});
                    var selectedColor = this.color;
                    selectedColor = selectedColor.toLowerCase();
                    this.element.val(selectedColor);
                }
            });
        });
    </script>
    <script>
        let editor;
        ClassicEditor.create(document.getElementById("markup_description"), {
            toolbar: {
                items: [
                    'undo', 'redo',
                    'bold', 'italic', 'strikethrough', '|',
                    'bulletedList', 'numberedList', '|',
                    'outdent', 'indent', '|',
                    'fontColor', 'highlight', '|',
                    'link'
                ],
                shouldNotGroupWhenFull: true
            },
        })
            .then(newEditor => {
                editor = newEditor;
            });
    </script>
{% endblock %}
